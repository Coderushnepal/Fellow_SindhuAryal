{"version":3,"sources":["Counter/Counter.js","utils/strings.js","components/NumberCounter.jsx","hoc/withRedbull.js","components/Button.jsx","Assign-2/user.js","Assign-2/withRedbull.js","App.js","serviceWorker.js","index.js"],"names":["Counter","props","handleInc","setState","count","state","handleDec","className","this","char","name","includes","toLowerCase","onClick","Component","withRedbull","WrappedComponent","add","console","log","sub","label","Button","action","title","withRedBull","flyAway","wings","flyaway","React","class","people","App","incrementCount","decrementCount","map","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e5bd637f.chunk.js","sourcesContent":["import React, {Component } from \"react\";\r\nimport { isVowel } from \"../utils/strings\";\r\nimport './Counter.css';\r\n\r\nclass Counter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count : 0,\r\n        }\r\n    }\r\n\r\n    handleInc = () => {\r\n        this.setState({\r\n            count : this.state.count + 1,\r\n        });\r\n    };\r\n\r\n    handleDec = () => {\r\n        this.setState({\r\n            count : this.state.count - 1,\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"CounterBox\">\r\n             <h1> Counter:   {this.state.count}</h1>\r\n                <p className = {isVowel(this.props.name[0]) ? \"red\" : \"green\"} >\r\n                     {this.props.name}\r\n                </p>\r\n                <button className = \"plus\" onClick = {this.handleInc}> + </button>\r\n                <button className = \"minus\" onClick = {this.handleDec}> - </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;","export const isVowel = (char) => {\r\n    const VOWELS = [\"a\" , \"e\" , \"i\" , \"o\" , \"u\"];\r\n\r\n    return VOWELS.includes(char.toLowerCase());\r\n};","import React, {Component} from \"react\";\r\nimport withRedbull from \"../hoc/withRedbull\";\r\n\r\nclass NumberCounter extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.props.add}> + </button>\r\n                <button onClick={this.props.sub}> - </button>\r\n                <h2>{this.props.label} {this.props.count}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRedbull(NumberCounter);","import React, { Component } from \"react\";\r\n// import UserComponent from \"../components/User\";\r\n\r\nconst withRedbull = (WrappedComponent) => {\r\n    class UserWrapper extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            \r\n            this.state = {\r\n                    count : 0,\r\n            };\r\n        }\r\n\r\n        add = ()  => {\r\n            console.log(this.state.count);\r\n            this.setState({ count: this.state.count + 1 })\r\n        }\r\n\r\n        sub = ()  => this.setState({ count: this.state.count - 1 })\r\n        \r\n        render() {\r\n            return <WrappedComponent count={this.state.count} add={this.add} sub={this.sub}/>\r\n        }\r\n    }\r\n    return UserWrapper;\r\n};\r\n\r\nexport default withRedbull;","import React, { Component } from \"react\";\r\n\r\nexport default class Button extends Component {\r\n  render() {\r\n    return <button onClick={this.props.action}> {this.props.title} </button>;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport withRedBull from './withRedbull';\r\n\r\nclass User extends React.Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    // }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>{ this.props.name } {this.props.wings}</h2>\r\n                <button class='btn' onClick={this.props.flyaway}>Click</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRedBull(User);","import React from 'react';\r\nconst withRedBull=(WrappedComponent) => {\r\n    class UserWrapper extends React.Component {\r\n        constructor(props){\r\n            super(props);\r\n            this.state={\r\n               wings:null\r\n            }\r\n        }\r\n        flyAway = () => {\r\n            this.setState({wings: 'can fly'})\r\n        }\r\n        render() {  \r\n                return <WrappedComponent  wings={this.state.wings} flyaway={this.flyAway} {...this.props}/>\r\n        }\r\n    }\r\n    return UserWrapper;\r\n};\r\nexport default withRedBull;","import React from 'react';\nimport Counter from \"./Counter/Counter\";\nimport EnhancedCounter from \"./components/NumberCounter\";\nimport './App.css';\nimport Button from \"./components/Button\";\nimport EnhancedUser from './Assign-2/user';\n\nconst people = [ \"Sindhu\",  \"Elisha\", \"Bisikha\", \"Kirtee\"];\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0\n    };\n  }\n\n  incrementCount = () => {\n    this.setState({\n      count: this.state.count + 1\n    });\n  };\n\n  decrementCount = () => {\n    this.setState({\n      count: this.state.count - 1\n    });\n  };\n\n  render() {\n    let { count } = this.state;\n    return (\n      <div> \n        <div className=\"app\">\n          <div class=\"count\">\n            DEMO:\n            <h3>Count:</h3>\n            <h1>{count}</h1>\n          </div>\n          <div className=\"buttons\">\n            <Button title={\"-\"} action={this.decrementCount} />\n            <Button title={\"+\"} action={this.incrementCount} />\n          </div>\n        </div>\n        Day 1\n        {people.map((name) => (\n         <Counter key={name} name={name} />\n      ))}\n      DAY 2 : Computing with Enhanced Component\n      <EnhancedCounter label =\"My label\" />\n      DAY 3 \n      <div>\n            {people.map((name) => \n        <EnhancedUser key={name} name={name} />\n      )}\n      </div>  \n\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}